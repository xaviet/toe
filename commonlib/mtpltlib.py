#! /usr/bin/python3
# coding=utf-8
'''
  mtpltlib.py
  ref : http://matplotlib.org/examples/index.html
'''

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import random
from mpl_toolkits.mplot3d import Axes3D
import time


def test1():
  fig = plt.figure()
  ax = Axes3D(fig)
  X = np.arange(-4, 4, 0.25)
  Y = np.arange(-4, 4, 0.25)
  X, Y = np.meshgrid(X, Y)
  R = np.sqrt(X**2 + Y**2)
  Z = np.sin(R)

  ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=plt.cm.hot)
  ax.contourf(X, Y, Z, zdir='z', offset=-2, cmap=plt.cm.hot)
  ax.set_zlim(-2,2)

  #plt.savefig('../plot3d_ex.png',dpi=48)
  plt.show()
  time.sleep(1)
  plt.close('all')
  

def test():
  a = [i for i in range(256)]
  b = [(random.random(),random.random()) for i in a]
  fig1 = plt.figure(1)
  plt.plot(a,b)
  plt.show()
  

gt620mPer='''1,1,522.0397,830
1,2,522.0397,823
1,4,522.0397,684
1,8,522.0397,675
1,16,522.0397,675
1,32,522.0397,694
1,64,522.0397,707
1,128,522.0397,721
1,256,522.0397,710
1,512,522.0397,732
1,1024,522.0397,776
2,1,522.0397,738
2,2,522.0397,708
2,4,522.0397,721
2,8,522.0397,710
2,16,522.0397,711
2,32,522.0397,707
2,64,522.0397,718
2,128,522.0397,727
2,256,522.0397,727
2,512,522.0397,726
2,1024,522.0397,837
4,1,522.0397,734
4,2,522.0397,713
4,4,522.0397,712
4,8,522.0397,727
4,16,522.0397,722
4,32,522.0397,722
4,64,522.0397,724
4,128,522.0397,720
4,256,522.0397,712
4,512,522.0397,770
4,1024,522.0397,1239
8,1,522.0397,712
8,2,522.0397,709
8,4,522.0397,718
8,8,522.0397,740
8,16,522.0397,744
8,32,522.0397,736
8,64,522.0397,790
8,128,522.0397,746
8,256,522.0397,823
8,512,522.0397,1221
8,1024,522.0397,2145
16,1,522.0397,766
16,2,522.0397,754
16,4,522.0397,769
16,8,522.0397,735
16,16,522.0397,718
16,32,522.0397,728
16,64,522.0397,763
16,128,522.0397,861
16,256,522.0397,1285
16,512,522.0397,2033
16,1024,522.0397,4967
32,1,522.0397,1087
32,2,522.0397,1076
32,4,522.0397,1114
32,8,522.0397,1095
32,16,522.0397,1096
32,32,522.0397,1120
32,64,522.0397,1105
32,128,522.0397,1275
32,256,522.0397,2132
32,512,522.0397,3726
32,1024,0.4152,7366
64,1,0.1125,419
64,2,0.8098,381
64,4,0.5070,650
64,8,0.2043,423
64,16,0.9016,493
64,32,0.5988,397
64,64,0.2961,544
64,128,0.9934,415
64,256,0.6906,346
64,512,0.3879,362
64,1024,0.0851,714
128,1,0.7824,380
128,2,0.4797,363
128,4,0.1769,351
128,8,0.8742,543
128,16,0.5715,610
128,32,0.2687,457
128,64,0.9660,403
128,128,0.6633,333
128,256,0.3605,416
128,512,0.0578,355
128,1024,0.7551,331
256,1,0.4523,351
256,2,0.1496,344
256,4,0.8469,327
256,8,0.5441,334
256,16,0.2414,330
256,32,0.9387,328
256,64,0.6359,331
256,128,0.3332,428
256,256,0.0305,392
256,512,0.7277,336
256,1024,0.4250,335
512,1,0.1223,340
512,2,0.8195,337
512,4,0.5168,362
512,8,0.2141,382
512,16,0.9113,335
512,32,0.6086,342
512,64,0.3059,336
512,128,0.0031,330
512,256,0.7004,329
512,512,0.3977,331
512,1024,0.0949,327
1024,1,0.7922,335
1024,2,0.4895,331
1024,4,0.1867,329
1024,8,0.8840,372
1024,16,0.5813,333
1024,32,0.2785,333
1024,64,0.9758,348
1024,128,0.6731,398
1024,256,0.3703,334
1024,512,0.0676,380
1024,1024,0.7649,344'''

def cudaPer3D(perInfo):
  fig = plt.figure()
  ax = Axes3D(fig) 
  x=[]
  y=[]
  z=[]
  r=[]
  for el0 in perInfo.split('\n'):
    elx,ely,elr,elz=el0.split(',')
    if(float(elr)<1):
      continue
    x.append(float(elx))
    y.append(float(ely))
    z.append(float(elz))
    r.append(float(elr))
  ax.scatter(x,y,z,s=10, c=r, marker='o')
  plt.show() 

if (__name__ == '__main__'):
  cudaPer3D(gt620mPer)